def condensator(path: str, remove_docstring: bool = True, remove_comments = True) -> list[str]:
    """
        Use this function to condensate a .py file !
    """
    
    if not path.endswith(".py"):
        raise BaseException("Cannot condensate a non Python file !")

    lines = None

    # Try to read the path, read all the lines
    try:
        with open(path) as f:
            lines = f.readlines()
    except:
        raise BaseException(f'Cannot open "{path}"')

    # Variable to detect if we are in a docstring or not
    inDocString = False

    # List with all the lines of the output 
    newLines = ["# Generated by CONDENSATOR 34XX !\n"]

    for line in lines:
        # Create a variable withouth " " at the start and at the end
        strip_line = line.strip()

        # Detect the start/end of a docstring and change the variable, skip if remove_doctring
        if strip_line.startswith('"""'):
            inDocString = not inDocString

            if remove_docstring:
                continue

        # If we are in a docstring we don't want to condensate it, skip if remove_doctring
        if inDocString:
            if not remove_docstring:
                newLines.append(line)

            continue

        # Skip empty lines
        if strip_line == "\n" or strip_line == "": continue

        # Skip comments if wanted
        if remove_comments and strip_line.startswith("#"): continue

        # Append the new line
        newLines.append(line)

    # Create the output path
    outPath = path[:-3] + "-out.py"

    # Try to write the new file
    try:
        with open(outPath, "w") as f:
            f.writelines(newLines)
    except:
        raise BaseException(f'Cannot write in "{outPath}"')

if __name__ == "__main__":
    condensator("./src/tests/filetest.py")